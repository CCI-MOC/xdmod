{
    "table_definition": [
        {
            "$ref": "etl_tables.d/cloud_openstack/staging_event.json#/table_definition"
        }
    ],

    "#": "Set up a staging table where we can generate unique event ids using the key",
    "#": "(resource, instance, event_time, event_type, record_type, account).",
    "#": "Events may not have an associated instance or host but since these are used",
    "#": "in the primary key set unknowns to 1",

    "source_query": {
        "records": {
            "resource_id": "raw.resource_id",
            "event_time_utc": "raw.event_time_utc",
            "event_type_id": "COALESCE(etype.event_type_id, 1)",
            "record_type_id": "COALESCE(rtype.record_type_id, 1)",
            "account_id": "COALESCE(acct.account_id, 1)",
            "host_id": "COALESCE(h.host_id, 1)",
            "instance_id": "COALESCE(i.instance_id, 1)",
            "instance_type_id": "COALESCE(itype.instance_type_id, 1)",
            "event_data": "raw.event_data",
	    "service_id": "s.service_id",
	    "project_id": "p.project_id"
        },

        "joins": [
            {
                "name": "openstack_raw_event",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "raw"
            },
            {
                "name": "event_type",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "etype",
                "on": "etype.openstack_event_type = raw.event_type"
            },
            {
                "name": "record_type",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "rtype",
                "on": "rtype.record_type = raw.record_type"
            },
            {
                "name": "account",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "acct",
                "on": "acct.provider_account = raw.provider_account AND acct.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            },
            {
                "name": "host",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "h",
                "on": "h.hostname = raw.hostname AND h.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            },
            {
                "name": "instance",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "i",
                "on": "i.provider_identifier = raw.provider_instance_identifier AND i.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            },
            {
                "name": "instance_type",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "itype",
                "on": "itype.instance_type = raw.instance_type AND itype.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            },
            {
                "name": "openstack_service",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "s",
                "on": "s.service = raw.service AND s.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            },
	    {
                "name": "openstack_project",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "p",
                "on": "p.openstack_project_id = raw.project_id AND s.resource_id = raw.resource_id",
                "type": "LEFT OUTER"
            }
        ],

        "groupby": [
            "raw.resource_id",
            "i.instance_id",
            "raw.event_time_utc",
            "etype.event_type_id",
            "rtype.record_type_id",
            "acct.account_id",
            "h.host_id"
        ]
    }
}
